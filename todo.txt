
#goals get a web server install up
#install queu dir
#Create IPC system
#Restart Server Command
#Test non block
#See server Uptime (JSON result)
#Create queues (local and other)
#See Queue List (JSON result)
#Change queue process name
#Fix bug with spaces in queue names and script names
#Detect queue death and restart
#Have QueueSupervisor shut down children upon shutdown
#Git checkin
#Lite Click on queues to dig deeper
  + main page has links
  + queue page has info

Monday
------
#Add to git.btrll.com repo
+Queue status
  + store status
  + return status
  + Lite-web queue process restart (hit a link, does restart, says
  'OK', you hit back button)

QueueSupervisor state
  - Try to start queues (just start any queue with a dir)
Lite Queue startup -> verify dirs -> loads state (operational status)
Lite queue mod administrative and operational state

Lite Have a message data store (ordered)
Have Queue restart show messages in store
Lite queue message manipulation

Magit on Aquamacs

Queue a job via cmd line (using ruby lib)
Have queue process show the items in queue via order
Lite Queue Restart and QueueMgr child process detection

Monday
------

DEMO

Have a local queue script deliver message
 - local queue on same host
 - remote queue on other host
   - network listener
   - ruby lib to talk protocol 

Control queue states (clean shutdown, hold, go)
Refactor Quemgr to be like queue

Have a script for another queue (cdb push)

Have a local queue script move job to a remote queue

DONE

Restart Server Command via web
View log via web (last 10 entries)
#  Simple IPC via cmd line or web to running process
#    Core is Unix Domain, Web Proxies
Have the queue send job to destination queue (local machine, local filesystem)
Have remote queue deliver
Have remote queue run
